name: Deploy Website

on:
  push:
    branches:
      - main # Se ejecuta en cada push a main
  repository_dispatch:
    types: [sanity_update] # Se ejecuta cuando se recibe un POST con el tipo "sanity_update"

jobs:
  build:
    runs-on: ubuntu-latest # Entorno de ejecución en GitHub Actions

    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # Obtener el código del repositorio

      - name: Setup Node.js
        uses: actions/setup-node@v2 # Configurar Node.js
        with:
          node-version: "14" # Definir la versión de Node.js

      - name: Install dependencies
        run: |
          npm install  # Instalar dependencias
          npm run build  # Ejecutar el build (si lo tienes configurado en package.json)

      - name: Deploy to GitHub Pages (for push)
        if: github.event_name == 'push' # Solo se ejecuta en push
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GH_TOKEN }} # Usar el token personal de GitHub para autenticar el deploy
          publish_dir: ./out # Directorio donde se encuentran los archivos generados
          publish_branch: gh-pages # Rama donde se hará el deploy

      - name: Deploy for Sanity update
        if: github.event_name == 'repository_dispatch' && github.event.action == 'sanity_update' # Solo se ejecuta en el evento de Sanity
        run: |
          echo "Running deploy for Sanity update..."
          node generate.js "${{ github.event.client_payload }}"  # Ejecutar generate.js con los datos del POST
          # Aquí puedes agregar otros pasos si es necesario para tu flujo de trabajo
          # como, por ejemplo, copiar los archivos generados a la rama gh-pages.
